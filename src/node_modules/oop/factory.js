var dop = require('dop');

var helpers = require('helpers');



/**
 * Uses listToObject to build a spec for a constructor input. It's used to avoid passing an object to the constructor, and use positional arguments instead, added with fixed values.
 */
function Factory(spec) {
	// Processing --------------------------------------------------------------

	dop.processProperties(factory, spec, {
		properties: [
			['ctor', 'type', 'factory', 'constructor'],
			{names: ['args', 'arguments'], default: {}},
			{names: ['values', 'vals', 'fixed', 'fix'], default: {}}
		]
	}, null);

	function factory() {
		return new factory.ctor(helpers.listToObject(arguments, factory.args, factory.values));
	}

	// Return ------------------------------------------------------------------

	return factory;
}

/**
 * Creates a factory using the given spec and adds it to the given constructor under the given name.
 */
function addFactory(constructor, name, spec) {
	constructor[name] = Factory(constructor, spec);
}



exports.Factory = Factory;

exports.addFactory = addFactory;
