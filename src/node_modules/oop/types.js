var prelude = require('prelude-ls');



var types = {
	String: {factory: function(input) {return "" + input;}},



	Boolean: {factory: function(input) {return Boolean(input);}},



	Number: {
		factory: function(input) {
			var value = Number(input);
			if (isNaN(value)) return undefined;
			return value;
		}
	},



	Array: {
		factory: function(input) {
			if (!prelude.isType('Array', input)) {
				return [input];
			}

			return input;
		}
	},



	/**
	 * @todo we could use a string as input to eval it
	 */
	Function: {
		factory: function(input) {
			if (!prelude.isType('Function', input)) {
				return undefined;
			}

			return input;
		}
	},



	/**
	 * @todo we could transform arrays to objects, containing only number keys, and droping the length property
	 */
	Object: {
		factory: function(input) {
			if (!prelude.isType('Object', input)) {
				return undefined;
			}

			return input;
		}
	}
}





exports.types = types;
